
# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit, fmt, integration

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path} 

[testenv]
setenv =
	PYTHONPATH={toxinidir}/src:{toxinidir}/lib

[testenv:update-requirements]
description = Update requirements files by executing pip-compile on all requirements*.in files, including those in subdirs.
deps =
    -r requirements-update-packages.txt
allowlist_externals =
    bash
    find
    pip-compile
    xargs
commands = 
; uses 'bash -c' because piping didn't work in regular tox commands
  bash -c \'find . -type f -name "requirements*.in" | xargs --replace=\{\} pip-compile --resolver=backtracking \{\}'

[testenv:fmt]
commands =
    isort {[vars]all_path}
    black {[vars]all_path}
deps =
    -r requirements-fmt.txt
description = Apply coding style standards to code

[testenv:lint]
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {toxinidir}/. --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}
deps =
    -r requirements-lint.txt
description = Check code against coding style standards

[testenv:unit]
commands = 
	pytest {[vars]tst_path}unit
deps =
    -r requirements-unit.txt

[testenv:integration]
commands = pytest -v --tb native --asyncio-mode=auto {[vars]tst_path}integration --log-cli-level=INFO -s {posargs}
deps =
    -r requirements-integration.txt
description = Run integration tests
