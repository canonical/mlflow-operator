name: Configure EKS and run MLflow bundle test

on:
  workflow_dispatch: # This event allows manual triggering from the GitHub UI
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  deploy-eks:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install tox and run tests
        run: |
          sudo apt-get install -y python3-pip
          sudo pip3 install tox
      
      - name: Configure AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region eu-central-1
      
      - name: Install kubectl
        run: |
          sudo snap install kubectl --classic
          mkdir ~/.kube
          kubectl version --client
      
      - name: Install eksctl
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version
      
      - name: Install juju
        run: |
          sudo snap install juju --classic
          sudo snap install charmcraft --classic
          juju version
      
      - name: Create cluster
        run: |
          eksctl create cluster -f .github/cluster.yaml
          kubectl get nodes
      
      - name: Setup juju
        run: |
          juju add-k8s kubeflow --client
          juju bootstrap --no-gui kubeflow kubeflow-controller
          juju add-model kubeflow
      
      - name: Test bundle deployment
        run: |
          tox -vve bundle-test -- --model kubeflow --keep-models -vv -s
      
      - name: Remove eks 
        if: always()
        run: |
          eksctl delete cluster --name=mlflow-bundle-test
      
      # On failure, capture debugging resources
      - name: Get all kubernetes resources
        run: kubectl get all -A
        if: failure()

      - name: Get juju status
        run: juju status
        if: failure()

      - name: Get workload logs
        run: kubectl logs --tail 100 -ntesting -lapp.kubernetes.io/name=mlflow-server
        if: failure()

      - name: Get operator logs
        run: kubectl logs --tail 100 -ntesting -loperator.juju.is/name=mlflow-server
        if: failure()
